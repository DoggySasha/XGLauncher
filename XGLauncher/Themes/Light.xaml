<ResourceDictionary x:Class="XGL.Light" xmlns:local="clr-namespace:XGL"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FontFamily x:Key="UIFont"/>

    <!-- Основные стили -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="border"
                            Padding="2"
                            UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <Grid>
                            <Border Opacity="0.5" Name="Border" Background="White"
                                    CornerRadius="4"/>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <Grid>
                            <Border Name="border" Background="White" Opacity="0" CornerRadius="5"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="border" Value="0.125"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="checkBg"
                                Grid.Column="0"
                                CornerRadius="2"
                                Margin="1"
                                Background="Transparent"
                                BorderBrush="#999999"
                                BorderThickness="2"/>
                        <Image x:Name="arrow" Source="\Images\checkmark.png"
                               Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" 
                                    TargetName="arrow" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBg"
                                    Value="#999999"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="checkBg"
                                    Value="#999999"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="checkBg"
                                    Value="#858585"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}" x:Key="default">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="border"
                            Padding="2"
                            UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <Grid>
                            <Border Opacity="0.5" Name="Border" Background="White"
                                    CornerRadius="4"/>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Специальные стили кнопок -->
    <Style TargetType="{x:Type Button}" x:Key="NewsButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Stretch"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Stretch"/>
                            <Border Name="blacker" Background="White" Opacity="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="blacker" Value="0.125"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MWBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Border>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0.9" StartPoint="0.5,0">
                                        <GradientStop Color="#00878787" Offset="0.999" x:Name="bgFadeColor"/>
                                        <GradientStop Color="#878787" x:Name="bgColor"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#999999"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#ababab"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Часто используемые стили кнопок -->
    <Style TargetType="{x:Type Button}" x:Key="LightButton">
        <Setter Property="Background" Value="#878787"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="10">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SmallBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#777777"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BigButtonGray" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="Transparent"
                            BorderThickness="0" 
                            Background="Transparent"
                            SnapsToDevicePixels="True" CornerRadius="5">
                        <Grid>
                            <Border Background="White" Opacity="0.5" Name="Border"
                                    CornerRadius="4"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.75"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OldStyleBigButtonGray" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#868686"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#808080"/>
                        </Trigger>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#878787"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стили кноаок окон -->
    <Style x:Key="WindowCloseBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#F44336"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowControlBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#878787"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стили текст боксов -->
    <Style TargetType="{x:Type TextBox}" x:Key="OldStyleTextBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            Background="#777777" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentTB"  TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <Grid>
                            <Border Name="EffectBorder"
                            Padding="2"
                            BorderThickness="1"
                            UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent"/>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="EffectBorder" Value="White"/>
                            <Setter Property="Opacity" TargetName="EffectBorder" Value="0.125"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            Background="#777777" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RichTextBox}" x:Key="TransparentRTB">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            Background="Transparent" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            Background="#777777" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditBox" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="AcceptsReturn"
          Value="true" />
        <Setter Property="AcceptsTab"
          Value="true" />
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border Name="Border"
                            Padding="2"
                            BorderThickness="1"
                            Background="White" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent" Opacity="0.125"/>
                        <Border
                            Padding="2"
                            BorderThickness="1"
                            Background="Transparent" UseLayoutRounding="True" CornerRadius="6"
                            BorderBrush="Transparent">
                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
                                    Value="#777777"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стили дополнительных компонентов -->
    <Style x:Key="GrayToggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="#777777"/>
        <Setter Property="BorderBrush" Value="#777777"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="checkBg"
                                UseLayoutRounding="True"
                                Grid.Column="0"
                                CornerRadius="6"
                                Margin="1"
                                Background="#777777"
                                BorderBrush="#777777"
                                BorderThickness="2"/>
                        <Image x:Name="arrow" Source="\Images\eye.png"
                               Opacity="1" Margin="5"/>
                        <Image x:Name="arrow1" Source="\Images\minus.png"
                               Opacity="0" Margin="7"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBg"
                                    Value="#878787"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="arrow" Value="0"/>
                            <Setter Property="Opacity" TargetName="arrow1" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Opacity" TargetName="arrow" Value="1"/>
                            <Setter Property="Opacity" TargetName="arrow1" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Grid >
                            <Border x:Name="border" Width="45" Height="20" Background="#777777" CornerRadius="10" Margin="5,0"/>
                            <Border x:Name="button" Height="25" Width="25" CornerRadius="12.5" HorizontalAlignment="Left"/>
                        </Grid>
                        <ContentPresenter x:Name="content" Margin="10,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.3" From="0,0,0,0" To="28,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.3" From="28,0,0,0" To="0,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"/>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="#949494"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"/>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="Background" Value="#F49B36"/>
                            <Setter TargetName="button" Property="Background" Value="#949494"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14" MinWidth="200" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track" CornerRadius="2"
                                BorderThickness="1" BorderBrush="#55000000"/>
                        <Border x:Name="PART_Indicator" Margin="1" CornerRadius="2"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}">
                            <Grid ClipToBounds="True" x:Name="Animation">
                                <Rectangle x:Name="PART_GlowRect" Width="100"
                                           HorizontalAlignment="Left"
                                           Fill="#F5A54A" Margin="-100,0,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#55000000"/>
        <Setter Property="Foreground" Value="#F49B36"/>
    </Style>
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                            BorderThickness="1"
                            UseLayoutRounding="True"
                            CornerRadius="5"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="#878787" 
                            BorderBrush="#878787">
                        <ContentPresenter Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels"
                                    Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!-- Стили скрол бара -->
    <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                            Margin="0"
                            CornerRadius="2"
                            BorderThickness="1"
                            Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="5" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="5" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
            CornerRadius="2"
            Background="#909090" />
            <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="1,0,1,0" Background="#adadad"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
            CornerRadius="2"
            Background="#F0F0F0" />
            <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,1,0,1" Background="White"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="Width"
              Value="Auto" />
                <Setter Property="Height"
              Value="18" />
                <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="Width"
              Value="18" />
                <Setter Property="Height"
              Value="Auto" />
                <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стили окон -->
    <Style x:Key="XGLauncherWindow" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="#818181"/>
        <Setter Property="Background" Value="#818181"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="6,6,6,6"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource WindowControlBtn}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0, 2, 1, 0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                    <Style TargetType="Button" x:Key="CloseBtn" BasedOn="{StaticResource WindowCloseBtn}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0, 2, 1, 0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5, 2, 0, 0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="Black"
                                           Text="{TemplateBinding Title}"/>
                                <Button Name="CloseBtn" Click="CloseBtn_Click" Style="{StaticResource CloseBtn}">
                                    <Button.Content>
                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Margin="0, 2, 0, 0">
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button Name="RestoreBtn" Click="RestoreBtn_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="Black"
                                                   StrokeThickness="1" Width="10" Height="8"
                                                   Margin="0, 3, 0, 0"
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                                <Button Name="MinimizeBtn" Click="MinimizeBtn_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="Black"
                                                   StrokeThickness="1" Width="10" Height="1"
                                                   Margin="0, 6, 0, 0"
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XGLauncherMainWindow" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="#818181"/>
        <Setter Property="Background" Value="#818181"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource WindowControlBtn}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0, 2, 1, 0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                    <Style TargetType="Button" x:Key="CloseBtn" BasedOn="{StaticResource WindowCloseBtn}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0, 2, 1, 0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5, 2, 0, 0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="Black"
                                           Text="{TemplateBinding Title}"/>
                                <Button Name="CloseBtn" Click="CloseBtn_Click" Style="{StaticResource CloseBtn}">
                                    <Button.Content>
                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Margin="0, 2, 0, 0">
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button Name="RestoreBtn" Click="RestoreBtn_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="Black"
                                                   StrokeThickness="1" Width="10" Height="8"
                                                   Margin="0, 3, 0, 0"
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                                <Button Name="MinimizeBtn" Click="MinimizeBtn_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="Black"
                                                   StrokeThickness="1" Width="10" Height="1"
                                                   Margin="0, 6, 0, 0"
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XGLauncherDialog" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="6,6,6,6"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" x:Key="CloseBtn" BasedOn="{StaticResource WindowCloseBtn}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0, 2, 1, 0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5, 2, 0, 0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="Black"
                                           Text="{TemplateBinding Title}"/>
                                <Button Name="CloseBtn" Click="CloseBtn_Click" Style="{StaticResource CloseBtn}">
                                    <Button.Content>
                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Margin="0, 2, 0, 0">
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>